/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CoreVoting, CoreVotingInterface } from "../CoreVoting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_timelock",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_baseQuorum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minProposalPower",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_gsc",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "votingVaults",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "created",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "execution",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "votingPower",
            type: "uint128",
          },
          {
            internalType: "enum CoreVoting.Ballot",
            name: "castBallot",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct CoreVoting.Vote",
        name: "vote",
        type: "tuple",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [],
    name: "DAY_IN_BLOCKS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvedVaults",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseQuorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_extraVoteTime",
        type: "uint256",
      },
    ],
    name: "changeExtraVotingTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    name: "changeVaultStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extraVoteTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minProposalPower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "votingVaults",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "extraVaultData",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "lastCall",
        type: "uint256",
      },
      {
        internalType: "enum CoreVoting.Ballot",
        name: "ballot",
        type: "uint8",
      },
    ],
    name: "proposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "bytes32",
        name: "proposalHash",
        type: "bytes32",
      },
      {
        internalType: "uint128",
        name: "created",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "unlock",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "expiration",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "quorum",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "lastCall",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "functionSelector",
        type: "bytes4",
      },
    ],
    name: "quorums",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "quorum",
        type: "uint256",
      },
    ],
    name: "setCustomQuorum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quorum",
        type: "uint256",
      },
    ],
    name: "setDefaultQuorum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockDuration",
        type: "uint256",
      },
    ],
    name: "setLockDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minProposalPower",
        type: "uint256",
      },
    ],
    name: "setMinProposalPower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "votingVaults",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "extraVaultData",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "enum CoreVoting.Ballot",
        name: "ballot",
        type: "uint8",
      },
    ],
    name: "vote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052620000136119606003620002d1565b600455620000256119606005620002d1565b6005553480156200003557600080fd5b5060405162002a4038038062002a408339810160408190526200005891620001c1565b600080546001600160a01b03191633178155600385905560068490555b8151811015620000ed57600160096000848481518110620000a657634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000e481620002f3565b91505062000075565b50620000f98562000130565b62000125826001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b50505050506200033d565b6000546001600160a01b03163314620001825760405162461bcd60e51b815260206004820152601060248201526f29b2b73232b9103737ba1037bbb732b960811b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b0381168114620001bc57600080fd5b919050565b600080600080600060a08688031215620001d9578081fd5b620001e486620001a4565b94506020808701519450604087015193506200020360608801620001a4565b60808801519093506001600160401b038082111562000220578384fd5b818901915089601f83011262000234578384fd5b81518181111562000249576200024962000327565b8060051b604051601f19603f8301168101818110858211171562000271576200027162000327565b604052828152858101935084860182860187018e101562000290578788fd5b8795505b83861015620002bd57620002a881620001a4565b85526001959095019493860193860162000294565b508096505050505050509295509295909350565b6000816000190483118215151615620002ee57620002ee62000311565b500290565b60006000198214156200030a576200030a62000311565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6126f3806200034d6000396000f3fe608060405234801561001057600080fd5b50600436106101975760003560e01c80638da5cb5b116100e3578063bd9c75a51161008c578063da35c66411610066578063da35c66414610418578063f131e5eb14610421578063fe9fbb801461042a57610197565b8063bd9c75a5146103e9578063d1b67627146103fc578063d4b875671461040f57610197565b8063af7a060c116100bd578063af7a060c14610380578063b6a5d7de146103b3578063b9181611146103c657610197565b80638da5cb5b1461031f578063a4c9507714610364578063aa35fb511461036d57610197565b806327c97fa5116101455780634eb665af1161011f5780634eb665af146102e6578063771a5323146102f95780637d5709eb1461030c57610197565b806327c97fa5146102ad578063341a7b42146102c05780634392b99c146102d357610197565b806313af40351161017657806313af40351461027e57806315126a3d146102915780631c39c96c146102a457610197565b806214d11d1461019c578063013cf08b146101b15780630455444314610267575b600080fd5b6101af6101aa366004612167565b61043d565b005b61021b6101bf366004612167565b600a60205260009081526040902080546001820154600283015460059093015491926fffffffffffffffffffffffffffffffff808316937001000000000000000000000000000000009384900482169383831693048216911686565b604080519687526fffffffffffffffffffffffffffffffff9586166020880152938516938601939093529083166060850152821660808401521660a082015260c0015b60405180910390f35b61027060045481565b60405190815260200161025e565b6101af61028c366004611f53565b6104ae565b6101af61029f366004612197565b61055c565b61027060035481565b6101af6102bb366004611f53565b610b06565b6101af6102ce366004611f6d565b610b9b565b6101af6102e1366004611fd9565b610c3a565b6101af6102f4366004612167565b610cf7565b610270610307366004611fa7565b610d63565b6101af61031a366004612167565b610dce565b60005461033f9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161025e565b61027060055481565b61027061037b3660046120ec565b610e3a565b6103a361038e366004611f53565b60096020526000908152604090205460ff1681565b604051901515815260200161025e565b6101af6103c1366004611f53565b611548565b6103a36103d4366004611f53565b60016020526000908152604090205460ff1681565b6101af6103f7366004612014565b6115ea565b6101af61040a366004612167565b611bc9565b61027060065481565b61027060075481565b61027061196081565b6103a3610438366004611f53565b611c35565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104a95760405162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064015b60405180910390fd5b600555565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105155760405162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064016104a0565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60025460ff16156105af5760405162461bcd60e51b815260206004820152600a60248201527f5265656e7472616e63790000000000000000000000000000000000000000000060448201526064016104a0565b6002805460ff191660019081179091556000848152600a6020526040902001546fffffffffffffffffffffffffffffffff700100000000000000000000000000000000909104164310156106455760405162461bcd60e51b815260206004820152600c60248201527f6e6f7420756e6c6f636b6564000000000000000000000000000000000000000060448201526064016104a0565b6000838152600a602052604090206001015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff166106c95760405162461bcd60e51b815260206004820152601360248201527f50726576696f75736c792065786563757465640000000000000000000000000060448201526064016104a0565b6000838152600a60205260409020600501546fffffffffffffffffffffffffffffffff16431061073b5760405162461bcd60e51b815260206004820152601860248201527f70617374206c6173742063616c6c2074696d657374616d70000000000000000060448201526064016104a0565b6000838152600a602090815260409182902054915161075e9185918591016123d3565b60405160208183030381529060405280519060200120146107c15760405162461bcd60e51b815260206004820152600d60248201527f68617368206d69736d617463680000000000000000000000000000000000000060448201526064016104a0565b6000838152600a60205260408082208151606081019283905291600391820191908285855b82829054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019060100190602082600f010492830192600103820291508084116107e6575050506000888152600a60209081526040808320600201549087015191870151875197985092967001000000000000000000000000000000009091046fffffffffffffffffffffffffffffffff1695509093506108959250612587565b61089f9190612587565b6fffffffffffffffffffffffffffffffff1610159050600082600160200201516fffffffffffffffffffffffffffffffff1683600060200201516fffffffffffffffffffffffffffffffff161190508180156108f85750805b6109445760405162461bcd60e51b815260206004820152600e60248201527f43616e6e6f74206578656375746500000000000000000000000000000000000060448201526064016104a0565b60005b8551811015610a6b57600086828151811061097257634e487b7160e01b600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168683815181106109b057634e487b7160e01b600052603260045260246000fd5b60200260200101516040516109c59190612257565b6000604051808303816000865af19150503d8060008114610a02576040519150601f19603f3d011682016040523d82523d6000602084013e610a07565b606091505b5050905080610a585760405162461bcd60e51b815260206004820152600b60248201527f43616c6c206661696c656400000000000000000000000000000000000000000060448201526064016104a0565b5080610a6381612658565b915050610947565b506040518681527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f9060200160405180910390a150505060009283525050600a6020526040812081815560018101829055600280820183905560038201839055600482019290925560050180547fffffffffffffffffffffffffffffffff00000000000000000000000000000000169055805460ff19169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b6d5760405162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064016104a0565b73ffffffffffffffffffffffffffffffffffffffff166000908152600160205260409020805460ff19169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610c025760405162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064016104a0565b73ffffffffffffffffffffffffffffffffffffffff919091166000908152600960205260409020805460ff1916911515919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ca15760405162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064016104a0565b73ffffffffffffffffffffffffffffffffffffffff90921660009081526008602090815260408083207fffffffff0000000000000000000000000000000000000000000000000000000090941683529290522055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d5e5760405162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064016104a0565b600455565b73ffffffffffffffffffffffffffffffffffffffff821660009081526008602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008516845290915281205480610dc5575050600354610dc8565b90505b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e355760405162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064016104a0565b600355565b6000828152600a60205260408120600101546fffffffffffffffffffffffffffffffff16610eaa5760405162461bcd60e51b815260206004820152601760248201527f70726f706f73616c20646f6573206e6f7420657869737400000000000000000060448201526064016104a0565b6000838152600a60205260409020600201546fffffffffffffffffffffffffffffffff16431115610f1d5760405162461bcd60e51b815260206004820152600760248201527f457870697265640000000000000000000000000000000000000000000000000060448201526064016104a0565b6000805b86518110156111f1576000610f378260016125bb565b90505b875181101561101f57878181518110610f6357634e487b7160e01b600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16888381518110610fa157634e487b7160e01b600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141561100d5760405162461bcd60e51b815260206004820152600f60248201527f6475706c6963617465207661756c74000000000000000000000000000000000060448201526064016104a0565b8061101781612658565b915050610f3a565b506009600088838151811061104457634e487b7160e01b600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff1682528101919091526040016000205460ff166110c45760405162461bcd60e51b815260206004820152601060248201527f756e7665726966696564207661756c740000000000000000000000000000000060448201526064016104a0565b8681815181106110e457634e487b7160e01b600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663e91f323533600a600089815260200190815260200160002060010160009054906101000a90046fffffffffffffffffffffffffffffffff1689858151811061115b57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b815260040161118193929190612273565b602060405180830381600087803b15801561119b57600080fd5b505af11580156111af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d3919061217f565b6111dd9083612587565b9150806111e981612658565b915050610f21565b50336000908152600b602090815260408083208784529091529020546fffffffffffffffffffffffffffffffff161561132457336000908152600b6020908152604080832087845280835281842054600a845291909320929091526fffffffffffffffffffffffffffffffff81169160030190700100000000000000000000000000000000900460ff16600281111561129a57634e487b7160e01b600052602160045260246000fd5b600381106112b857634e487b7160e01b600052603260045260246000fd5b600291828204019190066010028282829054906101000a90046fffffffffffffffffffffffffffffffff166112ed91906125d3565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505b6040518060400160405280826fffffffffffffffffffffffffffffffff16815260200184600281111561136757634e487b7160e01b600052602160045260246000fd5b9052336000908152600b602090815260408083208884528252909120825181546fffffffffffffffffffffffffffffffff9091167fffffffffffffffffffffffffffffffff0000000000000000000000000000000082168117835592840151919283917fffffffffffffffffffffffffffffff0000000000000000000000000000000000161770010000000000000000000000000000000083600281111561141f57634e487b7160e01b600052602160045260246000fd5b021790555050506000848152600a60205260409020819060030184600281111561145957634e487b7160e01b600052602160045260246000fd5b6003811061147757634e487b7160e01b600052603260045260246000fd5b600291828204019190066010028282829054906101000a90046fffffffffffffffffffffffffffffffff166114ac9190612587565b82546fffffffffffffffffffffffffffffffff9182166101009390930a928302919092021990911617905550336000818152600b602090815260408083208884529091529081902090518692917f79597d31752b5a254be8f219c055ebfefe925e085d99c7b04b0883298b356951916115259190612482565b60405180910390a36fffffffffffffffffffffffffffffffff1695945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146115af5760405162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064016104a0565b6115e78173ffffffffffffffffffffffffffffffffffffffff166000908152600160208190526040909120805460ff19169091179055565b50565b8483146116395760405162461bcd60e51b815260206004820152601560248201527f6172726179206c656e677468206d69736d61746368000000000000000000000060448201526064016104a0565b846116865760405162461bcd60e51b815260206004820152600e60248201527f656d7074792070726f706f73616c00000000000000000000000000000000000060448201526064016104a0565b60008686868660405160200161169f94939291906122c3565b60408051601f19818403018152919052805160209091012090506000805b878110156117fe5760006117368888848181106116ea57634e487b7160e01b600052603260045260246000fd5b90506020028101906116fc91906124cf565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c6492505050565b90506000600860008c8c8681811061175e57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906117739190611f53565b73ffffffffffffffffffffffffffffffffffffffff168152602080820192909252604090810160009081207fffffffff0000000000000000000000000000000000000000000000000000000086168252909252902054905080156117d757806117db565b6003545b9050838111156117e9578093505b505080806117f690612658565b9150506116bd565b5060055460045461180f90436125bb565b61181991906125bb565b84116118675760405162461bcd60e51b815260206004820152601a60248201527f65787069726573206265666f726520766f74696e6720656e647300000000000060448201526064016104a0565b6040518060e001604052808381526020016001436118859190612604565b6fffffffffffffffffffffffffffffffff168152602001600454436118aa91906125bb565b6fffffffffffffffffffffffffffffffff168152602001600554600454436118d291906125bb565b6118dc91906125bb565b6fffffffffffffffffffffffffffffffff168152602001826fffffffffffffffffffffffffffffffff168152602001600a6000600754815260200190815260200160002060030160038060200260405190810160405280929190826003801561199e576020028201916000905b82829054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019060100190602082600f010492830192600103820291508084116119495790505b50505091835250506fffffffffffffffffffffffffffffffff8681166020928301526007546000908152600a835260409081902084518155928401519084015190821670010000000000000000000000000000000091831682021760018401556060840151608085015190831692160217600282015560a0820151611a299060038084019190611c8d565b5060c08201518160050160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055509050506000611aba8d8d80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ab192508e91508f905061261b565b60075487610e3a565b90506000600654831115611ad057600654611ad2565b825b9050611add33611c35565b611b315780821015611b315760405162461bcd60e51b815260206004820152601960248201527f696e73756666696369656e7420766f74696e6720706f7765720000000000000060448201526064016104a0565b7fafbd5d299242bf861d198949ad835672e2e35b2e1838cee606a0b5aec2b4fa426007544360045443611b6491906125bb565b600554600454611b7490436125bb565b611b7e91906125bb565b60408051948552602085019390935291830152606082015260800160405180910390a1600160076000828254611bb491906125bb565b90915550505050505050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611c305760405162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064016104a0565b600655565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604090205460ff165b919050565b602001517ffffffffff00000000000000000000000000000000000000000000000000000001690565b600283019183908215611d3d5791602002820160005b83821115611cff57835183826101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055509260200192601001602081600f01049283019260010302611ca3565b8015611d3b5782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f01049283019260010302611cff565b505b50611d49929150611d4d565b5090565b5b80821115611d495760008155600101611d4e565b6000611d75611d7084612563565b612532565b83815290506020808201908360005b86811015611e045781358601601f8981830112611da057600080fd5b813567ffffffffffffffff811115611dba57611dba6126a7565b611dcb86601f198484011601612532565b91508082528a86828501011115611de157600080fd5b808684018784013760009082018601528552509282019290820190600101611d84565b505050509392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611c5f57600080fd5b60008083601f840112611e44578182fd5b50813567ffffffffffffffff811115611e5b578182fd5b6020830191508360208260051b8501011115611e7657600080fd5b9250929050565b600082601f830112611e8d578081fd5b81356020611e9d611d7083612563565b80838252828201915082860187848660051b8901011115611ebc578586fd5b855b85811015611ee157611ecf82611e0f565b84529284019290840190600101611ebe565b5090979650505050505050565b600082601f830112611efe578081fd5b611f0d83833560208501611d62565b9392505050565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168114611c5f57600080fd5b803560038110611c5f57600080fd5b600060208284031215611f64578081fd5b611f0d82611e0f565b60008060408385031215611f7f578081fd5b611f8883611e0f565b915060208301358015158114611f9c578182fd5b809150509250929050565b60008060408385031215611fb9578182fd5b611fc283611e0f565b9150611fd060208401611f14565b90509250929050565b600080600060608486031215611fed578081fd5b611ff684611e0f565b925061200460208501611f14565b9150604084013590509250925092565b60008060008060008060008060008060c08b8d031215612032578586fd5b8a3567ffffffffffffffff80821115612049578788fd5b6120558e838f01611e33565b909c509a5060208d013591508082111561206d578788fd5b6120798e838f01611e33565b909a50985060408d0135915080821115612091578788fd5b61209d8e838f01611e33565b909850965060608d01359150808211156120b5578586fd5b506120c28d828e01611e33565b90955093505060808b013591506120db60a08c01611f44565b90509295989b9194979a5092959850565b60008060008060808587031215612101578384fd5b843567ffffffffffffffff80821115612118578586fd5b61212488838901611e7d565b95506020870135915080821115612139578485fd5b5061214687828801611eee565b9350506040850135915061215c60608601611f44565b905092959194509250565b600060208284031215612178578081fd5b5035919050565b600060208284031215612190578081fd5b5051919050565b6000806000606084860312156121ab578081fd5b83359250602084013567ffffffffffffffff808211156121c9578283fd5b6121d587838801611e7d565b935060408601359150808211156121ea578283fd5b506121f786828701611eee565b9150509250925092565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008151808452612243816020860160208601612628565b601f01601f19169290920160200192915050565b60008251612269818460208701612628565b9190910192915050565b600073ffffffffffffffffffffffffffffffffffffffff851682526fffffffffffffffffffffffffffffffff84166020830152606060408301526122ba606083018461222b565b95945050505050565b6040808252810184905260008560608301825b8781101561231a57612309826122eb85611e0f565b73ffffffffffffffffffffffffffffffffffffffff16815260200190565b6020939093019291506001016122d6565b506020915083810382850152808582528282019050828660051b83010187855b888110156123c357601f1985840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18b360301811261237c578788fd5b8a01803567ffffffffffffffff811115612394578889fd5b8036038c13156123a2578889fd5b6123af85828a8501612201565b95880195945050509085019060010161233a565b50909a9950505050505050505050565b604080825283519082018190526000906020906060840190828701845b8281101561242457815173ffffffffffffffffffffffffffffffffffffffff168452602084019350908401906001016123f0565b50505083810382850152845180825282820190600581901b83018401878501865b8381101561247357601f1986840301855261246183835161222b565b94870194925090860190600101612445565b50909998505050505050505050565b81546fffffffffffffffffffffffffffffffff81168252604082019060801c60ff16600381106124c257634e487b7160e01b600052602160045260246000fd5b8060208401525092915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612503578283fd5b83018035915067ffffffffffffffff82111561251d578283fd5b602001915036819003821315611e7657600080fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561255b5761255b6126a7565b604052919050565b600067ffffffffffffffff82111561257d5761257d6126a7565b5060051b60200190565b60006fffffffffffffffffffffffffffffffff8083168185168083038211156125b2576125b2612691565b01949350505050565b600082198211156125ce576125ce612691565b500190565b60006fffffffffffffffffffffffffffffffff838116908316818110156125fc576125fc612691565b039392505050565b60008282101561261657612616612691565b500390565b6000611f0d368484611d62565b60005b8381101561264357818101518382015260200161262b565b83811115612652576000848401525b50505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561268a5761268a612691565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122070b666a4ac930d258bacf749a105f098cdba87e82ed4d962069ee079b7485ff564736f6c63430008030033";

export class CoreVoting__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _timelock: string,
    _baseQuorum: BigNumberish,
    _minProposalPower: BigNumberish,
    _gsc: string,
    votingVaults: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CoreVoting> {
    return super.deploy(
      _timelock,
      _baseQuorum,
      _minProposalPower,
      _gsc,
      votingVaults,
      overrides || {}
    ) as Promise<CoreVoting>;
  }
  getDeployTransaction(
    _timelock: string,
    _baseQuorum: BigNumberish,
    _minProposalPower: BigNumberish,
    _gsc: string,
    votingVaults: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _timelock,
      _baseQuorum,
      _minProposalPower,
      _gsc,
      votingVaults,
      overrides || {}
    );
  }
  attach(address: string): CoreVoting {
    return super.attach(address) as CoreVoting;
  }
  connect(signer: Signer): CoreVoting__factory {
    return super.connect(signer) as CoreVoting__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoreVotingInterface {
    return new utils.Interface(_abi) as CoreVotingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoreVoting {
    return new Contract(address, _abi, signerOrProvider) as CoreVoting;
  }
}
