"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockERC20__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "name_",
                type: "string",
            },
            {
                internalType: "string",
                name: "symbol_",
                type: "string",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [],
        name: "DOMAIN_SEPARATOR",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "PERMIT_TYPEHASH",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "nonces",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
            {
                internalType: "uint8",
                name: "v",
                type: "uint8",
            },
            {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
            },
        ],
        name: "permit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "source",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "setAllowance",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "who",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "setBalance",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x60806040523480156200001157600080fd5b5060405162001153380380620011538339810160408190526200003491620002b5565b8151620000499060009060208501906200015c565b5080516200005f9060019060208401906200015c565b506002805460ff1916601217905560036020526000197f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff81905530600090815260409020557f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000d691906200031c565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120600681905550505062000412565b8280546200016a90620003bf565b90600052602060002090601f0160209004810192826200018e5760008555620001d9565b82601f10620001a957805160ff1916838001178555620001d9565b82800160010185558215620001d9579182015b82811115620001d9578251825591602001919060010190620001bc565b50620001e7929150620001eb565b5090565b5b80821115620001e75760008155600101620001ec565b600082601f83011262000213578081fd5b81516001600160401b0380821115620002305762000230620003fc565b604051601f8301601f19908116603f011681019082821181831017156200025b576200025b620003fc565b8160405283815260209250868385880101111562000277578485fd5b8491505b838210156200029a57858201830151818301840152908201906200027b565b83821115620002ab57848385830101525b9695505050505050565b60008060408385031215620002c8578182fd5b82516001600160401b0380821115620002df578384fd5b620002ed8683870162000202565b9350602085015191508082111562000303578283fd5b50620003128582860162000202565b9150509250929050565b600080835482600182811c9150808316806200033957607f831692505b60208084108214156200035a57634e487b7160e01b87526022600452602487fd5b8180156200037157600181146200038357620003b1565b60ff19861689528489019650620003b1565b60008a815260209020885b86811015620003a95781548b8201529085019083016200038e565b505084890196505b509498975050505050505050565b600181811c90821680620003d457607f821691505b60208210811415620003f657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610d3180620004226000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637ecebe001161008c578063d505accf11610066578063d505accf146101fb578063da46098c14610210578063dd62ed3e14610257578063e30443bc14610282576100ea565b80637ecebe00146101c057806395d89b41146101e0578063a9059cbb146101e8576100ea565b806330adf81f116100c857806330adf81f14610143578063313ce567146101785780633644e5151461019757806370a08231146101a0576100ea565b806306fdde03146100ef578063095ea7b31461010d57806323b872dd14610130575b600080fd5b6100f76102b9565b6040516101049190610b9f565b60405180910390f35b61012061011b366004610b76565b610347565b6040519015158152602001610104565b61012061013e366004610aca565b6103c0565b61016a7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b604051908152602001610104565b6002546101859060ff1681565b60405160ff9091168152602001610104565b61016a60065481565b61016a6101ae366004610a7e565b60036020526000908152604090205481565b61016a6101ce366004610a7e565b60056020526000908152604090205481565b6100f761062d565b6101206101f6366004610b76565b61063a565b61020e610209366004610b05565b61064e565b005b61020e61021e366004610aca565b73ffffffffffffffffffffffffffffffffffffffff92831660009081526004602090815260408083209490951682529290925291902055565b61016a610265366004610a98565b600460209081526000928352604080842090915290825290205481565b61020e610290366004610b76565b73ffffffffffffffffffffffffffffffffffffffff909116600090815260036020526040902055565b600080546102c690610c3f565b80601f01602080910402602001604051908101604052809291908181526020018280546102f290610c3f565b801561033f5780601f106103145761010080835404028352916020019161033f565b820191906000526020600020905b81548152906001019060200180831161032257829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103af9086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604081205482811015610455576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f45524332303a20696e73756666696369656e742d62616c616e6365000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff851633146105725773ffffffffffffffffffffffffffffffffffffffff851660009081526004602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105705783811015610534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e742d616c6c6f77616e6365000000604482015260640161044c565b61053e8482610c28565b73ffffffffffffffffffffffffffffffffffffffff871660009081526004602090815260408083203384529091529020555b505b61057c8382610c28565b73ffffffffffffffffffffffffffffffffffffffff80871660009081526003602052604080822093909355908616815220546105b9908490610c10565b73ffffffffffffffffffffffffffffffffffffffff80861660008181526003602052604090819020939093559151908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061061a9087815260200190565b60405180910390a3506001949350505050565b600180546102c690610c3f565b60006106473384846103c0565b9392505050565b60065473ffffffffffffffffffffffffffffffffffffffff8881166000818152600560209081526040918290205482517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981840152808401859052948c166060860152608085018b905260a085015260c08085018a90528251808603909101815260e0850183528051908201207f1901000000000000000000000000000000000000000000000000000000000000610100860152610102850195909552610122808501959095528151808503909501855261014290930190528251929091019190912090610798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45524332303a20696e76616c69642d616464726573732d300000000000000000604482015260640161044c565b60408051600081526020810180835283905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa1580156107eb573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610889576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f45524332303a20696e76616c69642d7065726d69740000000000000000000000604482015260640161044c565b8415806108965750844211155b6108fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f45524332303a207065726d69742d657870697265640000000000000000000000604482015260640161044c565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156109ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161044c565b73ffffffffffffffffffffffffffffffffffffffff881660009081526005602052604081208054916109dd83610c93565b909155505073ffffffffffffffffffffffffffffffffffffffff8881166000818152600460209081526040808320948c16808452948252918290208a905590518981527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35050505050505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a7957600080fd5b919050565b600060208284031215610a8f578081fd5b61064782610a55565b60008060408385031215610aaa578081fd5b610ab383610a55565b9150610ac160208401610a55565b90509250929050565b600080600060608486031215610ade578081fd5b610ae784610a55565b9250610af560208501610a55565b9150604084013590509250925092565b600080600080600080600060e0888a031215610b1f578283fd5b610b2888610a55565b9650610b3660208901610a55565b95506040880135945060608801359350608088013560ff81168114610b59578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610b88578182fd5b610b9183610a55565b946020939093013593505050565b6000602080835283518082850152825b81811015610bcb57858101830151858201604001528201610baf565b81811115610bdc5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60008219821115610c2357610c23610ccc565b500190565b600082821015610c3a57610c3a610ccc565b500390565b600181811c90821680610c5357607f821691505b60208210811415610c8d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cc557610cc5610ccc565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212206ea5aa9e4aa70f01a8e82148f9d455dda96d1ee081d5ee9d643ed81c84de337864736f6c63430008030033";
var MockERC20__factory = /** @class */ (function (_super) {
    __extends(MockERC20__factory, _super);
    function MockERC20__factory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    MockERC20__factory.prototype.deploy = function (name_, symbol_, overrides) {
        return _super.prototype.deploy.call(this, name_, symbol_, overrides || {});
    };
    MockERC20__factory.prototype.getDeployTransaction = function (name_, symbol_, overrides) {
        return _super.prototype.getDeployTransaction.call(this, name_, symbol_, overrides || {});
    };
    MockERC20__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    MockERC20__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    MockERC20__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    MockERC20__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    MockERC20__factory.bytecode = _bytecode;
    MockERC20__factory.abi = _abi;
    return MockERC20__factory;
}(ethers_1.ContractFactory));
exports.MockERC20__factory = MockERC20__factory;
