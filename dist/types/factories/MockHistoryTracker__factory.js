"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockHistoryTracker__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "newMin",
                type: "uint256",
            },
        ],
        name: "clear",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "which",
                type: "uint256",
            },
        ],
        name: "find",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "which",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "stale",
                type: "uint256",
            },
        ],
        name: "findAndClear",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "loadBounds",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "loadTop",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "toBePushed",
                type: "uint256[]",
            },
        ],
        name: "multiPush",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "start",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "end",
                type: "uint256",
            },
        ],
        name: "peekArrayData",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "data",
                type: "uint256",
            },
        ],
        name: "push",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "";
var MockHistoryTracker__factory = /** @class */ (function (_super) {
    __extends(MockHistoryTracker__factory, _super);
    function MockHistoryTracker__factory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    MockHistoryTracker__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    MockHistoryTracker__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    MockHistoryTracker__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    MockHistoryTracker__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    MockHistoryTracker__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    MockHistoryTracker__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    MockHistoryTracker__factory.bytecode = _bytecode;
    MockHistoryTracker__factory.abi = _abi;
    return MockHistoryTracker__factory;
}(ethers_1.ContractFactory));
exports.MockHistoryTracker__factory = MockHistoryTracker__factory;
