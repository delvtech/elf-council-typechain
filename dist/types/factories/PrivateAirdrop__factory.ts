/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PrivateAirdrop,
  PrivateAirdropInterface,
} from "../PrivateAirdrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_airdropToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountPerRedemption",
        type: "uint256",
      },
      {
        internalType: "contract IPlonkVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "airdropToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amountPerRedemption",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
    ],
    name: "collectAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
    ],
    name: "updateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ad0380380610ad083398101604081905261002f916100c3565b61003833610073565b600180546001600160a01b03199081166001600160a01b03968716179091556002939093556003805490931691909316179055600455610123565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600080608085870312156100d8578384fd5b84516100e38161010b565b6020860151604087015191955093506100fb8161010b565b6060959095015193969295505050565b6001600160a01b038116811461012057600080fd5b50565b61099e806101326000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063715018a6116100765780638da5cb5b1161005b5780638da5cb5b1461016c578063ebf0c7171461018a578063f2fde38b14610193576100a3565b8063715018a61461014d5780637f0d715914610155576100a3565b8063213e0b17146100a857806321ff9970146100bd57806338c86911146100d05780634d06068a14610108575b600080fd5b6100bb6100b6366004610860565b6101a6565b005b6100bb6100cb366004610848565b610535565b6100f36100de366004610848565b60056020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6001546101289073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ff565b6100bb6105bb565b61015e60025481565b6040519081526020016100ff565b60005473ffffffffffffffffffffffffffffffffffffffff16610128565b61015e60045481565b6100bb6101a13660046107ed565b610648565b60008181526005602052604090205460ff1615610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f41697264726f7020616c72656164792072656465656d6564000000000000000060448201526064015b60405180910390fd5b604080516003808252608082019092526000916020820160608036833701905050905060045460001c81600081518110610287577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508160001c816001815181106102d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250503373ffffffffffffffffffffffffffffffffffffffff168160028151811061032e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910101526003546040517f1e8e1e1300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690631e8e1e1390610393908790879086906004016108d3565b60206040518083038186803b1580156103ab57600080fd5b505afa1580156103bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e39190610828565b610449576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f6f6620766572696669636174696f6e206661696c656400000000000000604482015260640161021b565b6000828152600560205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091555460025491517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481019290925273ffffffffffffffffffffffffffffffffffffffff169063a9059cbb90604401602060405180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190610828565b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161021b565b600455565b60005473ffffffffffffffffffffffffffffffffffffffff16331461063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161021b565b6106466000610778565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161021b565b73ffffffffffffffffffffffffffffffffffffffff811661076c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161021b565b61077581610778565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156107fe578081fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610821578182fd5b9392505050565b600060208284031215610839578081fd5b81518015158114610821578182fd5b600060208284031215610859578081fd5b5035919050565b600080600060408486031215610874578182fd5b833567ffffffffffffffff8082111561088b578384fd5b818601915086601f83011261089e578384fd5b8135818111156108ac578485fd5b8760208285010111156108bd578485fd5b6020928301989097509590910135949350505050565b6000604082528360408301528385606084013780606085840101527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011682016060810160206060858403018186015281865180845260808501915082880194508593505b8084101561095b578451825293820193600193909301929082019061093b565b509897505050505050505056fea2646970667358221220c064e43bbcb45f5f333201c009a1615cd90035678149575026346deeeb781ca964736f6c63430008030033";

export class PrivateAirdrop__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _airdropToken: string,
    _amountPerRedemption: BigNumberish,
    _verifier: string,
    _root: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrivateAirdrop> {
    return super.deploy(
      _airdropToken,
      _amountPerRedemption,
      _verifier,
      _root,
      overrides || {}
    ) as Promise<PrivateAirdrop>;
  }
  getDeployTransaction(
    _airdropToken: string,
    _amountPerRedemption: BigNumberish,
    _verifier: string,
    _root: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _airdropToken,
      _amountPerRedemption,
      _verifier,
      _root,
      overrides || {}
    );
  }
  attach(address: string): PrivateAirdrop {
    return super.attach(address) as PrivateAirdrop;
  }
  connect(signer: Signer): PrivateAirdrop__factory {
    return super.connect(signer) as PrivateAirdrop__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateAirdropInterface {
    return new utils.Interface(_abi) as PrivateAirdropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateAirdrop {
    return new Contract(address, _abi, signerOrProvider) as PrivateAirdrop;
  }
}
